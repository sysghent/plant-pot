
[build]
# Set the default target to match the Cortex-M0+ in the RP2040
target = "thumbv8m.main-none-eabihf"
# Target specific options
[target.thumbv8m.main-none-eabihf]
# Pass some extra options to rustc, some of which get passed on to the linker.
#
# * linker argument --nmagic turns off page alignment of sections (which saves
#   flash space)
# * linker argument -Tlink.x tells the linker to use link.x as the linker
#   script. This is usually provided by the cortex-m-rt crate, and by default
#   the version in that crate will include a file called `memory.x` which
#   describes the particular memory layout for your specific chip. 
# * no-vectorize-loops turns off the loop vectorizer (seeing as the M0+ doesn't
#   have SIMD)
runner = "probe-rs run --chip esp32c6"
rustflags = [

    "-C",
    "no-vectorize-loops",
    "-C",
    "link-arg=-Tdefmt.x", # defmt for logging
]


[env]
DEFMT_LOG = "info"
ESP_LOG = "info"
GATEWAY_IP = "1.1.1.1"
HOST_IP = "1.1.1.1"
PASSWORD = "PASSWORD"
SSID = "SSID"
STATIC_IP = "1.1.1.1 "

[unstable]
build-std = ["alloc", "core"]
